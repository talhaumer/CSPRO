# Generated by Django 3.1.7 on 2021-09-10 07:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('zone', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', default=0, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('modified_by', models.BigIntegerField(blank=True, db_column='ModifiedBy', default=0, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_column='ModifiedOn')),
                ('deleted_by', models.BigIntegerField(blank=True, db_column='DeletedBy', default=0, null=True)),
                ('deleted_on', models.DateTimeField(auto_now=True, db_column='DeletedOn')),
                ('status', models.BigIntegerField(db_column='Status', default=0, help_text='Be default 0 which has no meaning this field is used for making the status like pending approved and for some other purpose')),
                ('name', models.CharField(db_column='Name', default='', max_length=255)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True, help_text='Designates whether this user should be treated as active.')),
                ('email', models.EmailField(db_column='Email', help_text='Email Field', max_length=254, unique=True)),
                ('image', models.ImageField(blank=True, db_column='ImageField', null=True, upload_to='uploads/')),
                ('is_approved', models.BooleanField(db_column='IsApproved', default=False, help_text='Designates whether this user is approved or not.')),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can log into this admin site.')),
                ('country', models.ForeignKey(db_column='UserCountryId', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_country', to='zone.countries')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', default=0, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('modified_by', models.BigIntegerField(blank=True, db_column='ModifiedBy', default=0, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_column='ModifiedOn')),
                ('deleted_by', models.BigIntegerField(blank=True, db_column='DeletedBy', default=0, null=True)),
                ('deleted_on', models.DateTimeField(auto_now=True, db_column='DeletedOn')),
                ('status', models.BigIntegerField(db_column='Status', default=0, help_text='Be default 0 which has no meaning this field is used for making the status like pending approved and for some other purpose')),
                ('name', models.CharField(db_column='Name', max_length=255, unique=True)),
                ('code', models.SlugField(db_column='Code', default='')),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('access_level', models.IntegerField(choices=[(200, 'Sales_Manager'), (800, 'Local_Admin'), (900, 'Super_Admin'), (300, 'Proctor')], db_column='AccessLevel', default=200)),
            ],
            options={
                'db_table': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', default=0, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('modified_by', models.BigIntegerField(blank=True, db_column='ModifiedBy', default=0, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_column='ModifiedOn')),
                ('deleted_by', models.BigIntegerField(blank=True, db_column='DeletedBy', default=0, null=True)),
                ('deleted_on', models.DateTimeField(auto_now=True, db_column='DeletedOn')),
                ('status', models.BigIntegerField(db_column='Status', default=0, help_text='Be default 0 which has no meaning this field is used for making the status like pending approved and for some other purpose')),
                ('mail_notification', models.BooleanField(blank=True, db_column='MailNotification', default=False, null=True)),
                ('user', models.ForeignKey(db_column='UserId', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='admin_user', to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(db_column='UserZoneId', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_zone', to='zone.zone')),
            ],
            options={
                'db_table': 'UserInfo',
            },
        ),
        migrations.CreateModel(
            name='EmailToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.BigIntegerField(blank=True, db_column='CreatedBy', default=0, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('modified_by', models.BigIntegerField(blank=True, db_column='ModifiedBy', default=0, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, db_column='ModifiedOn')),
                ('deleted_by', models.BigIntegerField(blank=True, db_column='DeletedBy', default=0, null=True)),
                ('deleted_on', models.DateTimeField(auto_now=True, db_column='DeletedOn')),
                ('status', models.BigIntegerField(db_column='Status', default=0, help_text='Be default 0 which has no meaning this field is used for making the status like pending approved and for some other purpose')),
                ('token', models.CharField(blank=True, db_column='Token', default='', max_length=255, null=True)),
                ('user', models.ForeignKey(db_column='UserId', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='email_token_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'EmailToken',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(db_column='RoleId', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='user_role', to='users.role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]

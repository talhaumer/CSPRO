# Generated by Django 3.1.7 on 2021-09-10 07:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Proctors",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_column="CreatedBy", default=0, null=True
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, db_column="CreatedOn"),
                ),
                (
                    "modified_by",
                    models.BigIntegerField(
                        blank=True, db_column="ModifiedBy", default=0, null=True
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(auto_now=True, db_column="ModifiedOn"),
                ),
                (
                    "deleted_by",
                    models.BigIntegerField(
                        blank=True, db_column="DeletedBy", default=0, null=True
                    ),
                ),
                (
                    "deleted_on",
                    models.DateTimeField(auto_now=True, db_column="DeletedOn"),
                ),
                (
                    "status",
                    models.BigIntegerField(
                        db_column="Status",
                        default=0,
                        help_text="Be default 0 which has no meaning this field is used for making the status like pending approved and for some other purpose",
                    ),
                ),
                ("telephone", models.CharField(max_length=25)),
                ("publication", models.TextField(db_column="Publications")),
                ("note", models.TextField(db_column="Note")),
                (
                    "only_speaker",
                    models.BooleanField(db_column="OnlySpeaker", default=False),
                ),
                (
                    "contract_starting_details",
                    models.DateField(db_column="ContractStartingDetails"),
                ),
                (
                    "contract_ending_details",
                    models.DateField(db_column="ContractEndingDetails"),
                ),
                (
                    "resume",
                    models.FileField(
                        blank=True, db_column="Resume", null=True, upload_to="uploads/"
                    ),
                ),
                (
                    "proctorShip_contract_start_details",
                    models.DateField(
                        blank=True,
                        db_column="ProctorShipContractStartingDetails",
                        null=True,
                    ),
                ),
                (
                    "proctorShip_contract_ending_details",
                    models.DateField(
                        blank=True,
                        db_column="ProctorShipContractEndingDetails",
                        null=True,
                    ),
                ),
                (
                    "unavailability_start_date",
                    models.DateField(
                        blank=True, db_column="UnavailabilityStartDate", null=True
                    ),
                ),
                (
                    "unavailability_end_date",
                    models.DateField(
                        blank=True, db_column="UnavailabilityEndDate", null=True
                    ),
                ),
                (
                    "reason_why",
                    models.TextField(blank=True, db_column="ReasonWhy", null=True),
                ),
                (
                    "is_masterproctorship",
                    models.BooleanField(db_column="IsMasterProctorShip", default=False),
                ),
                (
                    "approach",
                    models.ManyToManyField(
                        db_column="ProctorsApproachID",
                        related_name="proctors_approach",
                        to="api.Approach",
                    ),
                ),
                (
                    "area_of_experties",
                    models.ManyToManyField(
                        db_column="AreaOfExpertiesId",
                        related_name="proctors_area_of_experties",
                        to="api.AreaOfExperties",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        db_column="ProctorsProductsID",
                        related_name="proctors_products",
                        to="api.Products",
                    ),
                ),
                (
                    "spoken_languages",
                    models.ManyToManyField(
                        db_column="ProctorsLanguageID",
                        related_name="proctors_spoken_language",
                        to="api.Languages",
                    ),
                ),
            ],
            options={
                "db_table": "Proctors",
            },
        ),
        migrations.CreateModel(
            name="ProctorsHospital",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_by",
                    models.BigIntegerField(
                        blank=True, db_column="CreatedBy", default=0, null=True
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(auto_now_add=True, db_column="CreatedOn"),
                ),
                (
                    "modified_by",
                    models.BigIntegerField(
                        blank=True, db_column="ModifiedBy", default=0, null=True
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(auto_now=True, db_column="ModifiedOn"),
                ),
                (
                    "deleted_by",
                    models.BigIntegerField(
                        blank=True, db_column="DeletedBy", default=0, null=True
                    ),
                ),
                (
                    "deleted_on",
                    models.DateTimeField(auto_now=True, db_column="DeletedOn"),
                ),
                (
                    "status",
                    models.BooleanField(
                        db_column="ProctorsHospitalStatus", default=True
                    ),
                ),
                (
                    "hospital",
                    models.ForeignKey(
                        db_column="HospitalId",
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hospital_pivot_id",
                        to="api.hospital",
                    ),
                ),
                (
                    "proctors",
                    models.ForeignKey(
                        db_column="ProctorsId",
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proctors_pivot_id",
                        to="proctors.proctors",
                    ),
                ),
            ],
            options={
                "db_table": "ProctorsHospital",
            },
        ),
    ]
